package connect4;

import java.awt.Color;
import javax.swing.Icon;
import javax.swing.ImageIcon;
import javax.swing.JOptionPane;

/**
 *
 * @author David Rosas
 */
public class Connect4GUI extends javax.swing.JFrame {

    private GameState gameState;

    private javax.swing.JLabel[][] slot = new javax.swing.JLabel[6][7];
    private Icon celebration = new ImageIcon(getClass().getResource("/connect4/Celebration.gif"));

    /**
     * Creates new form StartScreen
     */
    public Connect4GUI() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        menuPanel = new javax.swing.JPanel();
        gameBanner = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        StartGameButton = new javax.swing.JButton();
        ExitButton = new javax.swing.JButton();
        gamePanel = new javax.swing.JPanel();
        selectionColumnPanel = new javax.swing.JPanel();
        column1 = new javax.swing.JButton();
        column2 = new javax.swing.JButton();
        column3 = new javax.swing.JButton();
        column4 = new javax.swing.JButton();
        column5 = new javax.swing.JButton();
        column6 = new javax.swing.JButton();
        column7 = new javax.swing.JButton();
        gameboardPanel = new javax.swing.JPanel();
        backMainMenuButton = new javax.swing.JButton();
        playerTurnText = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setBackground(new java.awt.Color(255, 255, 255));
        setLocation(new java.awt.Point(0, 0));
        setMaximumSize(new java.awt.Dimension(800, 800));
        setMinimumSize(new java.awt.Dimension(800, 800));
        setPreferredSize(new java.awt.Dimension(800, 800));
        setResizable(false);
        setSize(new java.awt.Dimension(800, 800));
        getContentPane().setLayout(new java.awt.CardLayout());

        menuPanel.setBackground(new java.awt.Color(255, 255, 255));
        menuPanel.setMaximumSize(new java.awt.Dimension(100, 100));
        menuPanel.setMinimumSize(new java.awt.Dimension(50, 50));

        gameBanner.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/Connect4Logo.png"))); // NOI18N

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setMaximumSize(new java.awt.Dimension(100, 80));
        jPanel1.setMinimumSize(new java.awt.Dimension(100, 130));
        jPanel1.setLayout(new java.awt.GridLayout(3, 1, 0, 30));

        StartGameButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/startButton.png"))); // NOI18N
        StartGameButton.setBorder(null);
        StartGameButton.setBorderPainted(false);
        StartGameButton.setContentAreaFilled(false);
        StartGameButton.setMaximumSize(new java.awt.Dimension(50, 20));
        StartGameButton.setMinimumSize(new java.awt.Dimension(50, 20));
        StartGameButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/startButtonRollover.png"))); // NOI18N
        StartGameButton.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                StartGameButtonComponentShown(evt);
            }
        });
        StartGameButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                StartGameButtonActionPerformed(evt);
            }
        });
        jPanel1.add(StartGameButton);

        ExitButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/exitButton.png"))); // NOI18N
        ExitButton.setBorder(null);
        ExitButton.setBorderPainted(false);
        ExitButton.setContentAreaFilled(false);
        ExitButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/exitButtonRollover.png"))); // NOI18N
        ExitButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ExitButtonActionPerformed(evt);
            }
        });
        jPanel1.add(ExitButton);

        javax.swing.GroupLayout menuPanelLayout = new javax.swing.GroupLayout(menuPanel);
        menuPanel.setLayout(menuPanelLayout);
        menuPanelLayout.setHorizontalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGroup(menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(303, 303, 303)
                        .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(menuPanelLayout.createSequentialGroup()
                        .addGap(82, 82, 82)
                        .addComponent(gameBanner)))
                .addContainerGap(124, Short.MAX_VALUE))
        );
        menuPanelLayout.setVerticalGroup(
            menuPanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(menuPanelLayout.createSequentialGroup()
                .addGap(88, 88, 88)
                .addComponent(gameBanner)
                .addGap(65, 65, 65)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(60, Short.MAX_VALUE))
        );

        getContentPane().add(menuPanel, "card3");

        gamePanel.setBackground(new java.awt.Color(255, 255, 255));
        gamePanel.setOpaque(false);

        selectionColumnPanel.setLayout(new java.awt.GridLayout(1, 0, 3, 0));

        column1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column1.png"))); // NOI18N
        column1.setBorder(null);
        column1.setBorderPainted(false);
        column1.setContentAreaFilled(false);
        column1.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        column1.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column1Rollover.png"))); // NOI18N
        column1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                column1ActionPerformed(evt);
            }
        });
        selectionColumnPanel.add(column1);

        column2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column2.png"))); // NOI18N
        column2.setBorder(null);
        column2.setBorderPainted(false);
        column2.setContentAreaFilled(false);
        column2.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        column2.setHorizontalTextPosition(javax.swing.SwingConstants.LEFT);
        column2.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column2Rollover.png"))); // NOI18N
        column2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                column2ActionPerformed(evt);
            }
        });
        selectionColumnPanel.add(column2);

        column3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column3.png"))); // NOI18N
        column3.setBorder(null);
        column3.setBorderPainted(false);
        column3.setContentAreaFilled(false);
        column3.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        column3.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column3Rollover.png"))); // NOI18N
        column3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                column3ActionPerformed(evt);
            }
        });
        selectionColumnPanel.add(column3);

        column4.setBackground(new java.awt.Color(242, 242, 242));
        column4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column4.png"))); // NOI18N
        column4.setBorder(null);
        column4.setBorderPainted(false);
        column4.setContentAreaFilled(false);
        column4.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        column4.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column4Rollover.png"))); // NOI18N
        column4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                column4ActionPerformed(evt);
            }
        });
        selectionColumnPanel.add(column4);

        column5.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column5.png"))); // NOI18N
        column5.setBorder(null);
        column5.setBorderPainted(false);
        column5.setContentAreaFilled(false);
        column5.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        column5.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column5Rollover.png"))); // NOI18N
        column5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                column5ActionPerformed(evt);
            }
        });
        selectionColumnPanel.add(column5);

        column6.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column6.png"))); // NOI18N
        column6.setToolTipText("");
        column6.setBorder(null);
        column6.setBorderPainted(false);
        column6.setContentAreaFilled(false);
        column6.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        column6.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column6Rollover.png"))); // NOI18N
        column6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                column6ActionPerformed(evt);
            }
        });
        selectionColumnPanel.add(column6);

        column7.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column7.png"))); // NOI18N
        column7.setBorder(null);
        column7.setBorderPainted(false);
        column7.setContentAreaFilled(false);
        column7.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        column7.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/column7Rollover.png"))); // NOI18N
        column7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                column7ActionPerformed(evt);
            }
        });
        selectionColumnPanel.add(column7);

        gameboardPanel.setBackground(new java.awt.Color(0, 0, 0));
        gameboardPanel.setLayout(new java.awt.GridLayout(6, 7, 5, 5));

        backMainMenuButton.setIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/mainMenu.png"))); // NOI18N
        backMainMenuButton.setBorder(null);
        backMainMenuButton.setBorderPainted(false);
        backMainMenuButton.setContentAreaFilled(false);
        backMainMenuButton.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        backMainMenuButton.setRolloverIcon(new javax.swing.ImageIcon(getClass().getResource("/connect4/mainMenuRollover.png"))); // NOI18N
        backMainMenuButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                backMainMenuButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout gamePanelLayout = new javax.swing.GroupLayout(gamePanel);
        gamePanel.setLayout(gamePanelLayout);
        gamePanelLayout.setHorizontalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addGap(0, 110, Short.MAX_VALUE)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(gameboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(selectionColumnPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 580, Short.MAX_VALUE))
                .addContainerGap(116, Short.MAX_VALUE))
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(backMainMenuButton)
                .addGap(183, 183, 183)
                .addComponent(playerTurnText, javax.swing.GroupLayout.PREFERRED_SIZE, 166, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        gamePanelLayout.setVerticalGroup(
            gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(gamePanelLayout.createSequentialGroup()
                .addContainerGap()
                .addComponent(selectionColumnPanel, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12)
                .addComponent(gameboardPanel, javax.swing.GroupLayout.DEFAULT_SIZE, 517, Short.MAX_VALUE)
                .addGap(18, 18, 18)
                .addGroup(gamePanelLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(backMainMenuButton, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(playerTurnText, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );

        getContentPane().add(gamePanel, "card2");

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void StartGameButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_StartGameButtonActionPerformed
        // TODO add your handling code here:
        gameState = new GameState();
        menuPanel.setVisible(false);
        gamePanel.setVisible(true);
        playerTurnText();

        //add slots for the pieces to be places on the gameboard
        for (int i = 0; i < gameState.newBoard.getRows(); i++) {
            for (int j = 0; j < gameState.newBoard.getColumns(); j++) {
                slot[i][j] = new javax.swing.JLabel("", javax.swing.JLabel.CENTER);
                slot[i][j].setText(null);
                gameboardPanel.add(slot[i][j]);
                slot[i][j].setBackground(Color.white);
                slot[i][j].setOpaque(true);
                slot[i][j].repaint();
            }
        }
    }//GEN-LAST:event_StartGameButtonActionPerformed

    private void ExitButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ExitButtonActionPerformed
        // TODO add your handling code here:
        System.exit(0);
    }//GEN-LAST:event_ExitButtonActionPerformed

    private void StartGameButtonComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_StartGameButtonComponentShown
        // TODO add your handling code here:

    }//GEN-LAST:event_StartGameButtonComponentShown

    private void column1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_column1ActionPerformed
        // TODO add your handling code here:

        placePiece(1);

    }//GEN-LAST:event_column1ActionPerformed

    private void column2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_column2ActionPerformed
        // TODO add your handling code here:

        placePiece(2);
    }//GEN-LAST:event_column2ActionPerformed

    private void column3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_column3ActionPerformed
        // TODO add your handling code here:

        placePiece(3);
    }//GEN-LAST:event_column3ActionPerformed

    private void column4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_column4ActionPerformed
        // TODO add your handling code here:

        placePiece(4);
    }//GEN-LAST:event_column4ActionPerformed

    private void column5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_column5ActionPerformed
        // TODO add your handling code here:

        placePiece(5);
    }//GEN-LAST:event_column5ActionPerformed

    private void column6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_column6ActionPerformed
        // TODO add your handling code here:

        placePiece(6);
    }//GEN-LAST:event_column6ActionPerformed

    private void column7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_column7ActionPerformed
        // TODO add your handling code here:

        placePiece(7);
    }//GEN-LAST:event_column7ActionPerformed

    private void backMainMenuButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_backMainMenuButtonActionPerformed
        // TODO add your handling code here:
        resetGame();
    }//GEN-LAST:event_backMainMenuButtonActionPerformed

    public boolean isColumnFull(int col) {
        return (slot[0][col].getText() != null);
    }

    private void placePiece(int column) {
        // we subtract 1 from the column so we're in the right place in the array
        int col = column - 1;

        //we are still using the ASCII version of the game to mirror the GUI 
        //so we can track the state of the board. so whenever we place a piece
        //we also place is on the ASCII version
        gameState.playerTurn(column);
        gameState.newBoard.getBoardState();

        //System.out.print(isColumnFull(col));
        if (!isColumnFull(col)) {
            if (slot[0][col].getText() == null) {
                for (int i = gameState.newBoard.getRows() - 1; i >= 0; i--) {
                    if (slot[i][col].getText() == null) {
                        //set the player piece as the icon to the JLabel
                        slot[i][col].setIcon(gameState.activePlayer.getPlayerIcon());

                        //set the text to blank so the spot is no longer null
                        slot[i][col].setText("");
                        //we can temporarliy comment out break to fill
                        // a column faster for testing
                        checkBoard();
                        gameState.endTurn();
                        playerTurnText();

                        break;
                    }
                }
            }
        } else {
            JOptionPane.showMessageDialog(null,
                    "This Column is full.\nPlease choose a new column.",
                    "Whoops!",
                    JOptionPane.WARNING_MESSAGE);
        }

    }

    private void checkBoard() {
        if (gameState.newBoard.isBoardFull()) {
            Object[] options = {"Main Menu", "Exit"};
            int choice = JOptionPane.showOptionDialog(
                    null,
                    "The Board is Full!",
                    "Game Over",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.PLAIN_MESSAGE,
                    null,
                    options,
                    options[0]
            );

            if (choice == JOptionPane.YES_OPTION) {
                resetGame();
            } else {
                System.exit(0);
            }
        }

        if (gameState.newBoard.checkForWin(gameState.activePlayer.getPlayerColor())) {
            Object[] options = {"Main Menu", "Exit"};
            int choice = JOptionPane.showOptionDialog(
                    null,
                    gameState.activePlayer.getPlayerName() + " wins!\n",
                    "Ladies and Gentlemen, We have a Winner!",
                    JOptionPane.YES_NO_OPTION,
                    JOptionPane.PLAIN_MESSAGE,
                    celebration,
                    options,
                    options[0]
            );

            if (choice == JOptionPane.YES_OPTION) {
                resetGame();
            } else {
                System.exit(0);
            }
        }
    }

    private void resetGame() {

        gameState = new GameState();
        menuPanel.setVisible(true);
        gamePanel.setVisible(false);

        for (int i = 0; i < gameState.newBoard.getRows(); i++) {
            for (int j = 0; j < gameState.newBoard.getColumns(); j++) {
                gameboardPanel.remove(slot[i][j]);
            }
        }

    }

    private void playerTurnText() {
        if (gameState.activePlayer.getPlayerNumber() == 1) {
            playerTurnText.setIcon(new ImageIcon(getClass().getResource("/connect4/Player1Turn.png")));
        } else if (gameState.activePlayer.getPlayerNumber() == 2) {
            playerTurnText.setIcon(new ImageIcon(getClass().getResource("/connect4/Player2Turn.png")));
        }

    }

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */

        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Connect4GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Connect4GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Connect4GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Connect4GUI.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Connect4GUI().setVisible(true);
            }
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton ExitButton;
    private javax.swing.JButton StartGameButton;
    private javax.swing.JButton backMainMenuButton;
    private javax.swing.JButton column1;
    private javax.swing.JButton column2;
    private javax.swing.JButton column3;
    private javax.swing.JButton column4;
    private javax.swing.JButton column5;
    private javax.swing.JButton column6;
    private javax.swing.JButton column7;
    private javax.swing.JLabel gameBanner;
    private javax.swing.JPanel gamePanel;
    private javax.swing.JPanel gameboardPanel;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel menuPanel;
    private javax.swing.JLabel playerTurnText;
    private javax.swing.JPanel selectionColumnPanel;
    // End of variables declaration//GEN-END:variables
}
